basePath: /loan-api/api/v1
definitions:
  models.CreateLoanRequest:
    properties:
      loan_type_id:
        type: integer
    required:
    - loan_type_id
    type: object
  models.DocumentType:
    enum:
    - cedula
    - pasaporte
    - tarjeta_identidad
    type: string
    x-enum-varnames:
    - DocumentTypeCedula
    - DocumentTypePasaporte
    - DocumentTypeTarjetaIdentidad
  models.LoanDataItemRequest:
    properties:
      form_id:
        type: integer
      index:
        type: integer
      key:
        type: string
      value:
        type: string
    required:
    - form_id
    - key
    - value
    type: object
  models.LoanDataResponse:
    properties:
      form_id:
        type: integer
      id:
        type: integer
      index:
        type: integer
      key:
        type: string
      value:
        type: string
    type: object
  models.LoanResponse:
    properties:
      amount_approved:
        type: number
      created_at:
        type: string
      data:
        items:
          $ref: '#/definitions/models.LoanDataResponse'
        type: array
      id:
        type: integer
      loan_type:
        $ref: '#/definitions/models.LoanTypeResponse'
      loan_type_id:
        type: integer
      observation:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.UserResponse'
      user_id:
        type: integer
    type: object
  models.LoanTypeFormResponse:
    properties:
      code:
        type: string
      description:
        type: string
      form_inputs:
        items:
          $ref: '#/definitions/models.LoanTypeVersionFormInputResponse'
        type: array
      id:
        type: integer
      is_required:
        type: boolean
      name:
        type: string
      order:
        type: integer
    type: object
  models.LoanTypeResponse:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      max_amount:
        type: number
      min_amount:
        type: number
      name:
        type: string
      version:
        $ref: '#/definitions/models.LoanTypeVersionResponse'
    type: object
  models.LoanTypeVersionFormInputResponse:
    properties:
      code:
        type: string
      default_value:
        type: string
      id:
        type: integer
      input_type:
        type: string
      is_required:
        type: boolean
      label:
        type: string
      name:
        type: string
      options:
        type: string
      order:
        type: integer
      placeholder:
        type: string
      validation_rules:
        type: string
    type: object
  models.LoanTypeVersionResponse:
    properties:
      description:
        type: string
      form_inputs:
        items:
          $ref: '#/definitions/models.LoanTypeVersionFormInputResponse'
        type: array
      forms:
        items:
          $ref: '#/definitions/models.LoanTypeFormResponse'
        type: array
      id:
        type: integer
      version:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.UserResponse'
    type: object
  models.RegisterRequest:
    properties:
      document_number:
        maxLength: 20
        minLength: 5
        type: string
      document_type:
        $ref: '#/definitions/models.DocumentType'
      email:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
      password:
        minLength: 8
        type: string
      password_confirmation:
        minLength: 8
        type: string
      phone:
        maxLength: 20
        minLength: 10
        type: string
    required:
    - document_number
    - document_type
    - email
    - name
    - password
    - password_confirmation
    - phone
    type: object
  models.SaveLoanDataRequest:
    properties:
      data:
        items:
          $ref: '#/definitions/models.LoanDataItemRequest'
        type: array
      loan_id:
        type: integer
    required:
    - data
    - loan_id
    type: object
  models.TenantResponse:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
    type: object
  models.UserResponse:
    properties:
      created_at:
        type: string
      document_number:
        type: string
      document_type:
        $ref: '#/definitions/models.DocumentType'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
  utils.APIResponse:
    properties:
      data: {}
      error:
        $ref: '#/definitions/utils.ErrorInfo'
      message:
        type: string
      success:
        type: boolean
    type: object
  utils.ErrorInfo:
    properties:
      code:
        type: integer
      details:
        type: string
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: Soporte API
    url: http://www.swagger.io/support
  description: API REST para gestión de solicitudes de préstamos
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Loan API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Autentica un usuario y retorna un token JWT
      parameters:
      - description: Credenciales del usuario
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Iniciar sesión
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registra un nuevo usuario en el sistema
      parameters:
      - description: Datos del usuario
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Registrar un nuevo usuario
      tags:
      - auth
  /loan-types:
    get:
      consumes:
      - application/json
      description: Obtiene todos los tipos de préstamo con sus formularios e inputs
        disponibles para un tenant
      parameters:
      - description: ID del tenant
        in: header
        name: X-Tenant-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.LoanTypeResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Obtener tipos de préstamo con formularios
      tags:
      - loan-types
  /loan-types/{code}:
    get:
      consumes:
      - application/json
      description: Obtiene un tipo de préstamo específico con sus formularios e inputs
        por código
      parameters:
      - description: ID del tenant
        in: header
        name: X-Tenant-ID
        required: true
        type: string
      - description: Código del tipo de préstamo
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.LoanTypeResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Obtener tipo de préstamo por código
      tags:
      - loan-types
  /loans:
    post:
      consumes:
      - application/json
      description: Crea una nueva solicitud de préstamo para un usuario autenticado
      parameters:
      - description: ID del tenant
        in: header
        name: X-Tenant-ID
        required: true
        type: string
      - description: Datos de la solicitud de préstamo
        in: body
        name: loan
        required: true
        schema:
          $ref: '#/definitions/models.CreateLoanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.LoanResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Crear una nueva solicitud de préstamo
      tags:
      - loans
  /loans/{id}:
    get:
      consumes:
      - application/json
      description: Obtiene la información completa de un préstamo por ID
      parameters:
      - description: ID del tenant
        in: header
        name: X-Tenant-ID
        required: true
        type: string
      - description: ID del préstamo
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.LoanResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Obtener información de un préstamo
      tags:
      - loans
  /loans/data:
    post:
      consumes:
      - application/json
      description: Guarda los datos dinámicos de una solicitud de préstamo existente
      parameters:
      - description: ID del tenant
        in: header
        name: X-Tenant-ID
        required: true
        type: string
      - description: Datos del préstamo a guardar
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SaveLoanDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Guardar datos de una solicitud de préstamo
      tags:
      - loans
  /loans/user:
    get:
      consumes:
      - application/json
      description: Obtiene todos los préstamos de un usuario autenticado
      parameters:
      - description: ID del tenant
        in: header
        name: X-Tenant-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.LoanResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Obtener préstamos de un usuario
      tags:
      - loans
  /tenants:
    get:
      consumes:
      - application/json
      description: Obtiene todos los tenants disponibles para pruebas
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TenantResponse'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Obtener tenants disponibles
      tags:
      - tenants
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
